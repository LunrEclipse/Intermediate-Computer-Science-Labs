// testDateAll.cpp#include <iostream.h>#include <date.h>void testDefault();void testConstruct();void testCopyConstruct();void testSetDate();void testGetDate();void testInput();void testIncrement();void testDecrement();void testRelationals();main(){	cout << "Testing Date Class" << endl << endl;	testDefault();	testConstruct();	testCopyConstruct();	testSetDate();	testGetDate();	testInput();	testIncrement();	testDecrement();	testRelationals();	return 0;}void testDefault(){	date day;		cout << "Default constructor: " << endl << "   ";	day.print();	cout << endl << endl;}void testConstruct(){	date day (7,4,97);		cout << "Constructor with inits" << endl;	cout << "   7,4,97 ---> " << day << endl << endl;}void testCopyConstruct(){	date day1 (2,29,96);	date day2 (day1);		cout << "Copy constructor" << endl;	cout << "   2,29,96 ---> " << day2 << endl << endl;}void testSetDate(){	date day;		cout << "SetDate:" << endl;	day.setDate(1,15,82);	cout << "   1,15,82 ---> " << day << endl;	day.setDate(10,25,1996);	cout << "   10,25,1996 ---> " << day << endl;	day.setDate(1,1,00);	cout << "   1,1,00 ---> " << day << endl;	day.setDate(2,29,97);	cout << "   2,29,97 ---> " << day << "  (1997 is not a leap year)" << endl;	day.setDate(4,31,97);	cout << "   4,31,97 ---> " << day << "  (April has only 30 days)" << endl;	day.setDate(13,25,96);	cout << "   13,25,96 ---> " << day << endl;	day.setDate(0,0,96);	cout << "   0,0,96 ---> " << day << endl << endl;}void testGetDate(){	date day;		cout << "GetDate:" << endl;	cout << "   Enter a date (mo day year) ---> ";	day.getDate();	cout << "   Date entered = " << day << endl << endl;}	void testInput(){	date day;		cout << "Testing >> operator" << endl;	cout << "   Enter a date (mo day year) ---> ";	cin >> day;	cout << "   Date entered = " << day << endl << endl;}void testIncrement(){	date day (2,1,95), target(2,1,96), temp;	int k;		cout << "Testing ++ operator" << endl;	cout << "   Starting date = " << day << endl;	for (k=1; k<=365; k++)		day++;	cout << "     365 days later" << endl;	cout << "   Ending date = " << day << endl;	if (day != target)		cout << "   Error, ending date should be = " << target << endl;	cout << endl;		day.setDate(2,1,96);	target.setDate(1,31,97);	cout << "   Starting date = " << day << endl;	for (k=1; k<=365; k++)		++day;	cout << "     365 days later" << endl;	cout << "   Ending date = " << day << endl;	if (day != target)		cout << "   Error, ending date should be = " << target << endl;	cout << endl;			day.setDate(8,31,97);	target.setDate(9,1,97);	temp = ++day;	if (temp == target) cout << "   Preincrement return works" << endl;	else cout << "   Preincrement return did not work" << endl;	cout << endl;		day.setDate(8,31,97);	target = day;	temp = day++;	if (temp == target) cout << "   Postincrement return works" << endl;	else cout << "   Postincrement return did not work" << endl;	cout << endl;	cout << "          Hit return to continue ";	cin.get();	cin.get();	cout << endl << endl;}	void testDecrement(){	date day (2,1,96), target(2,1,95), temp;	int k;		cout << "Testing -- operators" << endl;	cout << "   Starting date = " << day << endl;	for (k=1; k<=365; k++)		day--;	cout << "     365 days earlier" << endl;	cout << "   Ending date = " << day << endl;	if (day != target)		cout << "   Error, ending date should be = " << target << endl;	cout << endl;		day.setDate(1,31,97);	target.setDate(2,1,96);	cout << "   Starting date = " << day << endl;	for (k=1; k<=365; k++)		--day;	cout << "     365 days earlier" << endl;	cout << "   Ending date = " << day << endl;	if (day != target)		cout << "   Error, ending date should be = " << target << endl;	cout << endl;			day.setDate(9,1,97);	target.setDate(8,31,97);	temp = --day;	if (temp == target) cout << "   Predecrement return works" << endl;	else cout << "   Predecrement return did not work" << endl;	cout << endl;		day.setDate(8,31,97);	target = day;	temp = day--;	if (temp == target) cout << "   Postdecrement return works" << endl;	else cout << "   Postdecrement return did not work" << endl;	cout << endl;	cout << "          Hit return to continue ";	cin.get();	cout << endl << endl;}void testRelationals(){	date day1 (8,15,96), day2;		cout << "Testing Relational Operators" << endl << endl;	day2 = day1;	if (day1 == day2)		cout << "   " << day1 << " = " << day2 << endl;	else		cout << " = operator did not work" << endl;	if (day1 <= day2)		cout << "   " << day1 << " <= " << day2 << endl;	else		cout << " <= operator did not work" << endl;	if (day1 >= day2)		cout << "   " << day1 << " >= " << day2 << endl;	else		cout << " >= operator did not work" << endl;	day2++;	if (day1 < day2)		cout << "   " << day1 << " < " << day2 << endl;	else		cout << " < operator did not work" << endl;	if (day1 <= day2)		cout << "   " << day1 << " <= " << day2 << endl;	else		cout << " <= operator did not work" << endl;	day1++;	day1++;	if (day1 > day2)		cout << "   " << day1 << " > " << day2 << endl;	else		cout << " > operator did not work";	if (day1 >= day2)		cout << "   " << day1 << " >= " << day2 <<endl;	else		cout << " >=  operator did not work";	if (day1 != day2)		cout << "   " << day1 << " != " << day2 << endl;	else		cout << " != operator did not work";}