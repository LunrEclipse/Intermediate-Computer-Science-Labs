// squeeze.cpp/* This process filter will convert any leading blank spaces at the	beginning of a line into an integer value.  The old file will remain	unchanged while the new file will have the blanks replaced with an	integer count.  The remainder of the line will be unchanged. */#include <iostream.h>#include <fstream.h>#include <iomanip.h>#include <bool.h>#include <stdlib.h>#include <apstring.h>const apstring sourceFile = "c:\\cppcode\\volume1\\lesson14\\squeeze.cpp";main (){	ifstream inFile;	ofstream outFile;	bool  doSpaces=true;  // a state variable, we are at front of line	int  count=0;		 // to count spaces	char  letter;	inFile.open(sourceFile.c_str());	outFile.open ("c:\\cppcode\\dummy.txt");   if (inFile.fail())   {   	cerr << "Could not open " << sourceFile << endl;      abort();   }	outFile << setiosflags (ios::right);	while (inFile.get(letter))	{		if (doSpaces && letter == ' ')			++count;		else			if (letter != '\n')  // we have some text to process			{				if (doSpaces)  // need to send count and first letter				{					outFile << setw(2) << count << "  " << letter;					doSpaces = false;				}				else  // already sent count, need to send letter only					outFile << letter;			}			else  // letter == '\n'			{				if (doSpaces)  // if spaces and linefeed only					outFile << setw(2) << count;				outFile << '\n';				doSpaces = true;   // reset to true for next line				count = 0;			}	}	return 0;}