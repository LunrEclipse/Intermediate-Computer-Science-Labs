// makeLife.cpp#include <apmatrix.cpp>#include <iostream.h>#include <fstream.h>#include <dice.h>		// random number generator from Lesson 12#include <iomanip.h>const int MAX = 20;		// sets grid size for Life problemvoid innoculate (apmatrix<int> &table, int howMany){	int count=0, row, col;	dice die(MAX);	while (count < howMany)	{		row = die.roll();		col = die.roll();		if (0 == table[row][col])		{			table[row][col] = 1;			count ++;		}	}}void saveFile (const apmatrix<int> table, int howMany){	ofstream outFile("Mac HD:ap96:lifeData.txt");	// ofstream outFile ("lifeData.txt", ios::out);		Wintel version	outFile << howMany << endl;	for (int row=1; row<=MAX; row++)		for (int col=1; col<=MAX; col++)			if (table[row][col])				outFile << setw(4) << row << setw(4) << col << endl;}main(){	int howMany;	apmatrix<int> table(MAX+1,MAX+1,0);	// initialize to 0's	cout << "Life data file program" << endl << endl;	cout << "Enter number of bacteria to create ---> ";	cin >> howMany;	innoculate (table, howMany);	saveFile (table,howMany);	return 0;}