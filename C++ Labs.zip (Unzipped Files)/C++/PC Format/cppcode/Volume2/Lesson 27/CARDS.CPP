// cards.cpp#include <iostream.h>#include <apstring.h>enum suitType {hearts, clubs, diamonds, spades, badsuit};enum valueType {two, three, four, five, six, seven, eight, nine, ten,					 jack, queen, king, ace, badvalue};ostream& operator<< (ostream &out, suitType cardSuit);istream& operator>> (istream &in, suitType &cardSuit);ostream& operator<< (ostream &out, valueType value);istream& operator>> (istream &in, valueType &value);main (){	suitType cardSuit;	valueType cardValue;	do	{		cout << "Enter a card value ---> ";		cin >> cardValue;		cout << "Enter a card suit ---> ";		cin >> cardSuit;		cout << "Card entered = " << cardValue << " of " << cardSuit << endl;	}	while (cardSuit != badsuit);	return 0;}ostream& operator<< (ostream &out, suitType cardSuit){	switch (cardSuit)	{		case hearts:	out << "hearts"; break;		case clubs:	out << "clubs"; break;		case diamonds:	out << "diamonds"; break;		case spades:  out << "spades"; break;		case badsuit: out << "not a valid suit"; break;	}	return out;}istream& operator>> (istream &in, suitType &cardSuit){	apstring tempSuit;	in >> tempSuit;	for (int pos=0; pos<tempSuit.length(); pos++)		if (('A'<=tempSuit[pos]) && (tempSuit[pos]<='Z'))			tempSuit[pos] = tempSuit[pos] + 32;  // make it all lowercase	if (tempSuit == "hearts") cardSuit = hearts;	else if (tempSuit == "clubs") cardSuit = clubs;	else if (tempSuit == "diamonds") cardSuit = diamonds;	else if (tempSuit == "spades") cardSuit = spades;	else cardSuit = badsuit;	return in;}ostream& operator<< (ostream &out, valueType value){	switch (value)	{		case two:	out << "two"; break;		case three:	out << "three"; break;		case four:	out << "four"; break;		case five:  out << "five"; break;		case six:	out << "six"; break;		case seven:	out << "seven"; break;		case eight: out << "eight"; break;		case nine:  out << "nine"; break;		case ten:   out << "ten"; break;		case jack:	out << "jack"; break;		case queen:	out << "queen"; break;		case king:  out << "king"; break;		case ace:	out << "ace"; break;		case badvalue: out << "not a valid card value"; break;	}	return out;}istream& operator>> (istream &in, valueType &value){	apstring tempCard;	in >> tempCard;	for (int pos=0; pos<tempCard.length(); pos++)		if (('A'<=tempCard[pos]) && (tempCard[pos]<='Z'))			tempCard[pos] = tempCard[pos] + 32;  // make it all lowercase	if (tempCard == "two") value = two;	else if (tempCard == "three") value = three;	else if (tempCard == "four") value = four;	else if (tempCard == "five") value = five;	else if (tempCard == "six") value = six;	else if (tempCard == "seven") value = seven;	else if (tempCard == "eight") value = eight;	else if (tempCard == "nine") value = nine;	else if (tempCard == "ten") value = ten;	else if (tempCard == "jack") value = jack;	else if (tempCard == "queen") value = queen;	else if (tempCard == "king") value = king;	else if (tempCard == "ace") value = ace;	else value = badvalue;	return in;}