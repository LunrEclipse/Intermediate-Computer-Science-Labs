// date2.h  // Building a date ADT// Revised, 12/16/96// Note:  this file contains only the necessary code for Lesson 28 issues.#ifndef date_h_#define date_h_#include <iostream.h>#include <bool.h>class date{	public:		// Lesson 28 material		void getDate (istream &);		void print (ostream &) const;		// and non-member functions outside of class					private:		int myMonth, myDay, myYear;		int daysInMonth (int, int);	// private member function};// non-member functions, support overloaded << and >> for date objects// Lesson 28 materialistream& operator>> (istream &, date &);ostream& operator<< (ostream &, const date &);void date::getDate (istream &infile){	int  month, day, year;		infile >> month >> day >> year;	setDate (month, day, year);}void date::print (ostream &outfile) const{	outfile << myMonth << "/" << myDay << "/";	if (2000 == myYear)		outfile << "00";	else if ((2000 < myYear) && (myYear < 2010)) outfile << "0" << myYear - 2000;	else if ((2010 <= myYear) && (myYear < 2100)) outfile << myYear - 2000;	else outfile << myYear - 1900; }istream& operator>> (istream &infile, date &temp){	temp.getDate (infile);	return infile;}ostream& operator<< (ostream &outfile, const date &temp){	temp.print(outfile);	return outfile;}#endif