//  list1.cpp#include <iostream.h>#include <iomanip.h>struct listNode{	int  data;	listNode  *next;};typedef listNode* nodePtr;struct listType{	nodePtr first;	nodePtr last;};	void createList (listType &);void printList (listType); void insert (listType &, int value);main(){	listType list;	int k;		list.first = list.last = NULL;	createList (list);	printList (list);	return 0;}void createList (listType &temp){	for (int k=1; k<=20; k++)		insert (temp, k);}	void insert (listType &temp, int value){	nodePtr newNode = new listNode;		newNode->data = value;	newNode->next = NULL;	if (NULL == temp.first)	{		temp.first = newNode;		temp.last = newNode;	}	else	{		temp.last->next = newNode;		temp.last = newNode;	}}void printList (listType local){	nodePtr temp = local.first;		cout << setiosflags (ios::right);	while (temp != NULL)	{		cout << setw(4) << temp->data;		temp = temp->next;	}	cout << endl;}	